diff --git a/configure b/configure
index 03d3c42..e3b31f7 100755
--- a/configure
+++ b/configure
@@ -1775,6 +1775,7 @@ EXTERNAL_LIBRARY_GPL_LIST="
 EXTERNAL_LIBRARY_NONFREE_LIST="
     decklink
     libfdk_aac
+    libfdk_aac_dlopen
     libtls
 "
 
@@ -3339,9 +3340,7 @@ libdav1d_decoder_deps="libdav1d"
 libdav1d_decoder_select="atsc_a53"
 libdavs2_decoder_deps="libdavs2"
 libdavs2_decoder_select="avs2_parser"
-libfdk_aac_decoder_deps="libfdk_aac"
-libfdk_aac_encoder_deps="libfdk_aac"
-libfdk_aac_encoder_select="audio_frame_queue"
+libfdk_aac_decoder_deps="LoadLibrary libfdk_aac"
 libgme_demuxer_deps="libgme"
 libgsm_decoder_deps="libgsm"
 libgsm_encoder_deps="libgsm"
@@ -6581,9 +6580,8 @@ enabled libdav1d          && require_pkg_config libdav1d "dav1d >= 0.5.0" "dav1d
 enabled libdavs2          && require_pkg_config libdavs2 "davs2 >= 1.6.0" davs2.h davs2_decoder_open
 enabled libdc1394         && require_pkg_config libdc1394 libdc1394-2 dc1394/dc1394.h dc1394_new
 enabled libdrm            && require_pkg_config libdrm libdrm xf86drm.h drmGetVersion
-enabled libfdk_aac        && { check_pkg_config libfdk_aac fdk-aac "fdk-aac/aacenc_lib.h" aacEncOpen ||
-                               { require libfdk_aac fdk-aac/aacenc_lib.h aacEncOpen -lfdk-aac &&
-                                 warn "using libfdk without pkg-config"; } }
+enabled libfdk_aac_dlopen && enable libfdk_aac
+enabled libfdk_aac        && require_headers "fdk-aac/aacdecoder_lib.h"
 flite_extralibs="-lflite_cmu_time_awb -lflite_cmu_us_awb -lflite_cmu_us_kal -lflite_cmu_us_kal16 -lflite_cmu_us_rms -lflite_cmu_us_slt -lflite_usenglish -lflite_cmulex -lflite"
 enabled libflite          && require libflite "flite/flite.h" flite_init $flite_extralibs
 enabled fontconfig        && enable libfontconfig
diff --git a/libavcodec/Makefile b/libavcodec/Makefile
index abae490..67372f9 100644
--- a/libavcodec/Makefile
+++ b/libavcodec/Makefile
@@ -1085,7 +1085,6 @@ OBJS-$(CONFIG_LIBCODEC2_ENCODER)          += libcodec2.o
 OBJS-$(CONFIG_LIBDAV1D_DECODER)           += libdav1d.o dynamic_hdr10_plus.o
 OBJS-$(CONFIG_LIBDAVS2_DECODER)           += libdavs2.o
 OBJS-$(CONFIG_LIBFDK_AAC_DECODER)         += libfdk-aacdec.o
-OBJS-$(CONFIG_LIBFDK_AAC_ENCODER)         += libfdk-aacenc.o
 OBJS-$(CONFIG_LIBGSM_DECODER)             += libgsmdec.o
 OBJS-$(CONFIG_LIBGSM_ENCODER)             += libgsmenc.o
 OBJS-$(CONFIG_LIBGSM_MS_DECODER)          += libgsmdec.o
diff --git a/libavcodec/allcodecs.c b/libavcodec/allcodecs.c
index 385ee34..b88ef04 100644
--- a/libavcodec/allcodecs.c
+++ b/libavcodec/allcodecs.c
@@ -765,7 +765,6 @@ extern const FFCodec ff_libcodec2_encoder;
 extern const FFCodec ff_libcodec2_decoder;
 extern const FFCodec ff_libdav1d_decoder;
 extern const FFCodec ff_libdavs2_decoder;
-extern const FFCodec ff_libfdk_aac_encoder;
 extern const FFCodec ff_libfdk_aac_decoder;
 extern const FFCodec ff_libgsm_encoder;
 extern const FFCodec ff_libgsm_decoder;
diff --git a/libavcodec/libfdk-aacdec.c b/libavcodec/libfdk-aacdec.c
index 8c1586e..11853d7 100644
--- a/libavcodec/libfdk-aacdec.c
+++ b/libavcodec/libfdk-aacdec.c
@@ -17,8 +17,40 @@
  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 
+#ifdef _WIN32
+#include <stdlib.h>
+#include "compat/w32dlfcn.h"
+
 #include <fdk-aac/aacdecoder_lib.h>
 
+static __typeof__(aacDecoder_AncDataInit) *dl_aacDecoder_AncDataInit = NULL;
+static __typeof__(aacDecoder_AncDataGet) *dl_aacDecoder_AncDataGet = NULL;
+static __typeof__(aacDecoder_SetParam) *dl_aacDecoder_SetParam = NULL;
+static __typeof__(aacDecoder_GetFreeBytes) *dl_aacDecoder_GetFreeBytes = NULL;
+static __typeof__(aacDecoder_Open) *dl_aacDecoder_Open = NULL;
+static __typeof__(aacDecoder_ConfigRaw) *dl_aacDecoder_ConfigRaw = NULL;
+static __typeof__(aacDecoder_RawISOBMFFData) *dl_aacDecoder_RawISOBMFFData = NULL;
+static __typeof__(aacDecoder_Fill) *dl_aacDecoder_Fill = NULL;
+static __typeof__(aacDecoder_DecodeFrame) *dl_aacDecoder_DecodeFrame = NULL;
+static __typeof__(aacDecoder_Close) *dl_aacDecoder_Close = NULL;
+static __typeof__(aacDecoder_GetStreamInfo) *dl_aacDecoder_GetStreamInfo = NULL;
+static __typeof__(aacDecoder_GetLibInfo) *dl_aacDecoder_GetLibInfo = NULL;
+#define aacDecoder_AncDataInit dl_aacDecoder_AncDataInit
+#define aacDecoder_AncDataGet dl_aacDecoder_AncDataGet
+#define aacDecoder_SetParam dl_aacDecoder_SetParam
+#define aacDecoder_GetFreeBytes dl_aacDecoder_GetFreeBytes
+#define aacDecoder_Open dl_aacDecoder_Open
+#define aacDecoder_ConfigRaw dl_aacDecoder_ConfigRaw
+#define aacDecoder_RawISOBMFFData dl_aacDecoder_RawISOBMFFData
+#define aacDecoder_Fill dl_aacDecoder_Fill
+#define aacDecoder_DecodeFrame dl_aacDecoder_DecodeFrame
+#define aacDecoder_Close dl_aacDecoder_Close
+#define aacDecoder_GetStreamInfo dl_aacDecoder_GetStreamInfo
+#define aacDecoder_GetLibInfo dl_aacDecoder_GetLibInfo
+#else
+#error "Building for non-Win32 is unsupported with the libfdk_aac dlopen patch"
+#endif /* _WIN32 */
+
 #include "libavutil/channel_layout.h"
 #include "libavutil/common.h"
 #include "libavutil/opt.h"
@@ -47,6 +79,9 @@ enum ConcealMethod {
 
 typedef struct FDKAACDecContext {
     const AVClass *class;
+#ifdef _WIN32
+    void *hAacDec;
+#endif
     HANDLE_AACDECODER handle;
     uint8_t *decoder_buffer;
     int decoder_buffer_size;
@@ -235,6 +270,12 @@ static av_cold int fdk_aac_decode_close(AVCodecContext *avctx)
         aacDecoder_Close(s->handle);
     av_freep(&s->decoder_buffer);
     av_freep(&s->anc_buffer);
+#ifdef _WIN32
+    if (s->hAacDec) {
+        dlclose(s->hAacDec);
+        s->hAacDec = NULL;
+    }
+#endif
 
     return 0;
 }
@@ -244,6 +285,36 @@ static av_cold int fdk_aac_decode_init(AVCodecContext *avctx)
     FDKAACDecContext *s = avctx->priv_data;
     AAC_DECODER_ERROR err;
 
+#ifdef _WIN32
+    /* Of course, %__MP_FDKAAC_PATH% can be any arbitrary DLL that will get loaded. Other code using dlopen
+       will accept any DLL path given, so it's probably okay to do the same here */
+    const char *path = getenv("__MP_FDKAAC_PATH");
+    if (path)
+        s->hAacDec = dlopen(path, RTLD_NOW | RTLD_LOCAL);
+    if (!path || !s->hAacDec || !dlsym(s->hAacDec, "aacDecoder_Open")) {
+        av_log(avctx, AV_LOG_ERROR, "Opening libfdk-aac DLL failed, skipping decoder\n");
+        return AVERROR_UNKNOWN;
+    }
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wstrict-aliasing"
+    // FARPROC is defined on Windows only
+    // Don't check for missing symbols other than aacDecoder_Open
+    *(FARPROC*)&dl_aacDecoder_AncDataInit = dlsym(s->hAacDec, "aacDecoder_AncDataInit");
+    *(FARPROC*)&dl_aacDecoder_AncDataGet = dlsym(s->hAacDec, "aacDecoder_AncDataGet");
+    *(FARPROC*)&dl_aacDecoder_SetParam = dlsym(s->hAacDec, "aacDecoder_SetParam");
+    *(FARPROC*)&dl_aacDecoder_GetFreeBytes = dlsym(s->hAacDec, "aacDecoder_GetFreeBytes");
+    *(FARPROC*)&dl_aacDecoder_Open = dlsym(s->hAacDec, "aacDecoder_Open");
+    *(FARPROC*)&dl_aacDecoder_ConfigRaw = dlsym(s->hAacDec, "aacDecoder_ConfigRaw");
+    *(FARPROC*)&dl_aacDecoder_RawISOBMFFData = dlsym(s->hAacDec, "aacDecoder_RawISOBMFFData");
+    *(FARPROC*)&dl_aacDecoder_Fill = dlsym(s->hAacDec, "aacDecoder_Fill");
+    *(FARPROC*)&dl_aacDecoder_DecodeFrame = dlsym(s->hAacDec, "aacDecoder_DecodeFrame");
+    *(FARPROC*)&dl_aacDecoder_Close = dlsym(s->hAacDec, "aacDecoder_Close");
+    *(FARPROC*)&dl_aacDecoder_GetStreamInfo = dlsym(s->hAacDec, "aacDecoder_GetStreamInfo");
+    *(FARPROC*)&dl_aacDecoder_GetLibInfo = dlsym(s->hAacDec, "aacDecoder_GetLibInfo");
+#pragma GCC diagnostic pop
+#endif
+
     s->handle = aacDecoder_Open(avctx->extradata_size ? TT_MP4_RAW : TT_MP4_ADTS, 1);
     if (!s->handle) {
         av_log(avctx, AV_LOG_ERROR, "Error opening decoder\n");
